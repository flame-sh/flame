// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: types.proto

package rpc

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SessionState int32

const (
	SessionState_Open   SessionState = 0
	SessionState_Closed SessionState = 1
)

// Enum value maps for SessionState.
var (
	SessionState_name = map[int32]string{
		0: "Open",
		1: "Closed",
	}
	SessionState_value = map[string]int32{
		"Open":   0,
		"Closed": 1,
	}
)

func (x SessionState) Enum() *SessionState {
	p := new(SessionState)
	*p = x
	return p
}

func (x SessionState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SessionState) Descriptor() protoreflect.EnumDescriptor {
	return file_types_proto_enumTypes[0].Descriptor()
}

func (SessionState) Type() protoreflect.EnumType {
	return &file_types_proto_enumTypes[0]
}

func (x SessionState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SessionState.Descriptor instead.
func (SessionState) EnumDescriptor() ([]byte, []int) {
	return file_types_proto_rawDescGZIP(), []int{0}
}

type TaskState int32

const (
	TaskState_Pending TaskState = 0
	TaskState_Running TaskState = 1
	TaskState_Succeed TaskState = 2
	TaskState_Failed  TaskState = 3
)

// Enum value maps for TaskState.
var (
	TaskState_name = map[int32]string{
		0: "Pending",
		1: "Running",
		2: "Succeed",
		3: "Failed",
	}
	TaskState_value = map[string]int32{
		"Pending": 0,
		"Running": 1,
		"Succeed": 2,
		"Failed":  3,
	}
)

func (x TaskState) Enum() *TaskState {
	p := new(TaskState)
	*p = x
	return p
}

func (x TaskState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TaskState) Descriptor() protoreflect.EnumDescriptor {
	return file_types_proto_enumTypes[1].Descriptor()
}

func (TaskState) Type() protoreflect.EnumType {
	return &file_types_proto_enumTypes[1]
}

func (x TaskState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TaskState.Descriptor instead.
func (TaskState) EnumDescriptor() ([]byte, []int) {
	return file_types_proto_rawDescGZIP(), []int{1}
}

type Shim int32

const (
	Shim_Log   Shim = 0
	Shim_Stdio Shim = 1
	Shim_Wasm  Shim = 2
	Shim_Shell Shim = 3
	Shim_Grpc  Shim = 4
)

// Enum value maps for Shim.
var (
	Shim_name = map[int32]string{
		0: "Log",
		1: "Stdio",
		2: "Wasm",
		3: "Shell",
		4: "Grpc",
	}
	Shim_value = map[string]int32{
		"Log":   0,
		"Stdio": 1,
		"Wasm":  2,
		"Shell": 3,
		"Grpc":  4,
	}
)

func (x Shim) Enum() *Shim {
	p := new(Shim)
	*p = x
	return p
}

func (x Shim) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Shim) Descriptor() protoreflect.EnumDescriptor {
	return file_types_proto_enumTypes[2].Descriptor()
}

func (Shim) Type() protoreflect.EnumType {
	return &file_types_proto_enumTypes[2]
}

func (x Shim) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Shim.Descriptor instead.
func (Shim) EnumDescriptor() ([]byte, []int) {
	return file_types_proto_rawDescGZIP(), []int{2}
}

type ApplicationState int32

const (
	ApplicationState_Enabled  ApplicationState = 0
	ApplicationState_Disabled ApplicationState = 1
)

// Enum value maps for ApplicationState.
var (
	ApplicationState_name = map[int32]string{
		0: "Enabled",
		1: "Disabled",
	}
	ApplicationState_value = map[string]int32{
		"Enabled":  0,
		"Disabled": 1,
	}
)

func (x ApplicationState) Enum() *ApplicationState {
	p := new(ApplicationState)
	*p = x
	return p
}

func (x ApplicationState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ApplicationState) Descriptor() protoreflect.EnumDescriptor {
	return file_types_proto_enumTypes[3].Descriptor()
}

func (ApplicationState) Type() protoreflect.EnumType {
	return &file_types_proto_enumTypes[3]
}

func (x ApplicationState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ApplicationState.Descriptor instead.
func (ApplicationState) EnumDescriptor() ([]byte, []int) {
	return file_types_proto_rawDescGZIP(), []int{3}
}

type ExecutorState int32

const (
	ExecutorState_ExecutorIdle    ExecutorState = 0
	ExecutorState_ExecutorBound   ExecutorState = 1
	ExecutorState_ExecutorRunning ExecutorState = 2
	ExecutorState_ExecutorUnknown ExecutorState = 3
)

// Enum value maps for ExecutorState.
var (
	ExecutorState_name = map[int32]string{
		0: "ExecutorIdle",
		1: "ExecutorBound",
		2: "ExecutorRunning",
		3: "ExecutorUnknown",
	}
	ExecutorState_value = map[string]int32{
		"ExecutorIdle":    0,
		"ExecutorBound":   1,
		"ExecutorRunning": 2,
		"ExecutorUnknown": 3,
	}
)

func (x ExecutorState) Enum() *ExecutorState {
	p := new(ExecutorState)
	*p = x
	return p
}

func (x ExecutorState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ExecutorState) Descriptor() protoreflect.EnumDescriptor {
	return file_types_proto_enumTypes[4].Descriptor()
}

func (ExecutorState) Type() protoreflect.EnumType {
	return &file_types_proto_enumTypes[4]
}

func (x ExecutorState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ExecutorState.Descriptor instead.
func (ExecutorState) EnumDescriptor() ([]byte, []int) {
	return file_types_proto_rawDescGZIP(), []int{4}
}

type Metadata struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Owner         *string                `protobuf:"bytes,3,opt,name=owner,proto3,oneof" json:"owner,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Metadata) Reset() {
	*x = Metadata{}
	mi := &file_types_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Metadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Metadata) ProtoMessage() {}

func (x *Metadata) ProtoReflect() protoreflect.Message {
	mi := &file_types_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Metadata.ProtoReflect.Descriptor instead.
func (*Metadata) Descriptor() ([]byte, []int) {
	return file_types_proto_rawDescGZIP(), []int{0}
}

func (x *Metadata) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Metadata) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Metadata) GetOwner() string {
	if x != nil && x.Owner != nil {
		return *x.Owner
	}
	return ""
}

type SessionStatus struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	State          SessionState           `protobuf:"varint,1,opt,name=state,proto3,enum=flame.SessionState" json:"state,omitempty"`
	CreationTime   int64                  `protobuf:"varint,2,opt,name=creation_time,json=creationTime,proto3" json:"creation_time,omitempty"`
	CompletionTime *int64                 `protobuf:"varint,3,opt,name=completion_time,json=completionTime,proto3,oneof" json:"completion_time,omitempty"`
	Pending        int32                  `protobuf:"varint,4,opt,name=pending,proto3" json:"pending,omitempty"`
	Running        int32                  `protobuf:"varint,5,opt,name=running,proto3" json:"running,omitempty"`
	Succeed        int32                  `protobuf:"varint,6,opt,name=succeed,proto3" json:"succeed,omitempty"`
	Failed         int32                  `protobuf:"varint,7,opt,name=failed,proto3" json:"failed,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *SessionStatus) Reset() {
	*x = SessionStatus{}
	mi := &file_types_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SessionStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SessionStatus) ProtoMessage() {}

func (x *SessionStatus) ProtoReflect() protoreflect.Message {
	mi := &file_types_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SessionStatus.ProtoReflect.Descriptor instead.
func (*SessionStatus) Descriptor() ([]byte, []int) {
	return file_types_proto_rawDescGZIP(), []int{1}
}

func (x *SessionStatus) GetState() SessionState {
	if x != nil {
		return x.State
	}
	return SessionState_Open
}

func (x *SessionStatus) GetCreationTime() int64 {
	if x != nil {
		return x.CreationTime
	}
	return 0
}

func (x *SessionStatus) GetCompletionTime() int64 {
	if x != nil && x.CompletionTime != nil {
		return *x.CompletionTime
	}
	return 0
}

func (x *SessionStatus) GetPending() int32 {
	if x != nil {
		return x.Pending
	}
	return 0
}

func (x *SessionStatus) GetRunning() int32 {
	if x != nil {
		return x.Running
	}
	return 0
}

func (x *SessionStatus) GetSucceed() int32 {
	if x != nil {
		return x.Succeed
	}
	return 0
}

func (x *SessionStatus) GetFailed() int32 {
	if x != nil {
		return x.Failed
	}
	return 0
}

type SessionSpec struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Application   string                 `protobuf:"bytes,2,opt,name=application,proto3" json:"application,omitempty"`
	Slots         int32                  `protobuf:"varint,3,opt,name=slots,proto3" json:"slots,omitempty"`
	CommonData    []byte                 `protobuf:"bytes,4,opt,name=common_data,json=commonData,proto3,oneof" json:"common_data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SessionSpec) Reset() {
	*x = SessionSpec{}
	mi := &file_types_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SessionSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SessionSpec) ProtoMessage() {}

func (x *SessionSpec) ProtoReflect() protoreflect.Message {
	mi := &file_types_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SessionSpec.ProtoReflect.Descriptor instead.
func (*SessionSpec) Descriptor() ([]byte, []int) {
	return file_types_proto_rawDescGZIP(), []int{2}
}

func (x *SessionSpec) GetApplication() string {
	if x != nil {
		return x.Application
	}
	return ""
}

func (x *SessionSpec) GetSlots() int32 {
	if x != nil {
		return x.Slots
	}
	return 0
}

func (x *SessionSpec) GetCommonData() []byte {
	if x != nil {
		return x.CommonData
	}
	return nil
}

type Session struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Metadata      *Metadata              `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Spec          *SessionSpec           `protobuf:"bytes,2,opt,name=spec,proto3" json:"spec,omitempty"`
	Status        *SessionStatus         `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Session) Reset() {
	*x = Session{}
	mi := &file_types_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Session) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Session) ProtoMessage() {}

func (x *Session) ProtoReflect() protoreflect.Message {
	mi := &file_types_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Session.ProtoReflect.Descriptor instead.
func (*Session) Descriptor() ([]byte, []int) {
	return file_types_proto_rawDescGZIP(), []int{3}
}

func (x *Session) GetMetadata() *Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *Session) GetSpec() *SessionSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

func (x *Session) GetStatus() *SessionStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

type TaskStatus struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	State          TaskState              `protobuf:"varint,1,opt,name=state,proto3,enum=flame.TaskState" json:"state,omitempty"`
	CreationTime   int64                  `protobuf:"varint,2,opt,name=creation_time,json=creationTime,proto3" json:"creation_time,omitempty"`
	CompletionTime *int64                 `protobuf:"varint,3,opt,name=completion_time,json=completionTime,proto3,oneof" json:"completion_time,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *TaskStatus) Reset() {
	*x = TaskStatus{}
	mi := &file_types_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskStatus) ProtoMessage() {}

func (x *TaskStatus) ProtoReflect() protoreflect.Message {
	mi := &file_types_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskStatus.ProtoReflect.Descriptor instead.
func (*TaskStatus) Descriptor() ([]byte, []int) {
	return file_types_proto_rawDescGZIP(), []int{4}
}

func (x *TaskStatus) GetState() TaskState {
	if x != nil {
		return x.State
	}
	return TaskState_Pending
}

func (x *TaskStatus) GetCreationTime() int64 {
	if x != nil {
		return x.CreationTime
	}
	return 0
}

func (x *TaskStatus) GetCompletionTime() int64 {
	if x != nil && x.CompletionTime != nil {
		return *x.CompletionTime
	}
	return 0
}

type TaskSpec struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SessionId     string                 `protobuf:"bytes,2,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	Input         []byte                 `protobuf:"bytes,3,opt,name=input,proto3,oneof" json:"input,omitempty"`
	Output        []byte                 `protobuf:"bytes,4,opt,name=output,proto3,oneof" json:"output,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TaskSpec) Reset() {
	*x = TaskSpec{}
	mi := &file_types_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskSpec) ProtoMessage() {}

func (x *TaskSpec) ProtoReflect() protoreflect.Message {
	mi := &file_types_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskSpec.ProtoReflect.Descriptor instead.
func (*TaskSpec) Descriptor() ([]byte, []int) {
	return file_types_proto_rawDescGZIP(), []int{5}
}

func (x *TaskSpec) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *TaskSpec) GetInput() []byte {
	if x != nil {
		return x.Input
	}
	return nil
}

func (x *TaskSpec) GetOutput() []byte {
	if x != nil {
		return x.Output
	}
	return nil
}

type Task struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Metadata      *Metadata              `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Spec          *TaskSpec              `protobuf:"bytes,2,opt,name=spec,proto3" json:"spec,omitempty"`
	Status        *TaskStatus            `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Task) Reset() {
	*x = Task{}
	mi := &file_types_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Task) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Task) ProtoMessage() {}

func (x *Task) ProtoReflect() protoreflect.Message {
	mi := &file_types_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Task.ProtoReflect.Descriptor instead.
func (*Task) Descriptor() ([]byte, []int) {
	return file_types_proto_rawDescGZIP(), []int{6}
}

func (x *Task) GetMetadata() *Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *Task) GetSpec() *TaskSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

func (x *Task) GetStatus() *TaskStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

type ApplicationStatus struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	State         ApplicationState       `protobuf:"varint,1,opt,name=state,proto3,enum=flame.ApplicationState" json:"state,omitempty"`
	CreationTime  int64                  `protobuf:"varint,2,opt,name=creation_time,json=creationTime,proto3" json:"creation_time,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ApplicationStatus) Reset() {
	*x = ApplicationStatus{}
	mi := &file_types_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ApplicationStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationStatus) ProtoMessage() {}

func (x *ApplicationStatus) ProtoReflect() protoreflect.Message {
	mi := &file_types_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationStatus.ProtoReflect.Descriptor instead.
func (*ApplicationStatus) Descriptor() ([]byte, []int) {
	return file_types_proto_rawDescGZIP(), []int{7}
}

func (x *ApplicationStatus) GetState() ApplicationState {
	if x != nil {
		return x.State
	}
	return ApplicationState_Enabled
}

func (x *ApplicationStatus) GetCreationTime() int64 {
	if x != nil {
		return x.CreationTime
	}
	return 0
}

type ApplicationSpec struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Shim             Shim                   `protobuf:"varint,1,opt,name=shim,proto3,enum=flame.Shim" json:"shim,omitempty"`
	Url              *string                `protobuf:"bytes,2,opt,name=url,proto3,oneof" json:"url,omitempty"`
	Command          *string                `protobuf:"bytes,3,opt,name=command,proto3,oneof" json:"command,omitempty"`
	Arguments        []string               `protobuf:"bytes,4,rep,name=arguments,proto3" json:"arguments,omitempty"`
	Environments     []string               `protobuf:"bytes,5,rep,name=environments,proto3" json:"environments,omitempty"`
	WorkingDirectory *string                `protobuf:"bytes,6,opt,name=working_directory,json=workingDirectory,proto3,oneof" json:"working_directory,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *ApplicationSpec) Reset() {
	*x = ApplicationSpec{}
	mi := &file_types_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ApplicationSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationSpec) ProtoMessage() {}

func (x *ApplicationSpec) ProtoReflect() protoreflect.Message {
	mi := &file_types_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationSpec.ProtoReflect.Descriptor instead.
func (*ApplicationSpec) Descriptor() ([]byte, []int) {
	return file_types_proto_rawDescGZIP(), []int{8}
}

func (x *ApplicationSpec) GetShim() Shim {
	if x != nil {
		return x.Shim
	}
	return Shim_Log
}

func (x *ApplicationSpec) GetUrl() string {
	if x != nil && x.Url != nil {
		return *x.Url
	}
	return ""
}

func (x *ApplicationSpec) GetCommand() string {
	if x != nil && x.Command != nil {
		return *x.Command
	}
	return ""
}

func (x *ApplicationSpec) GetArguments() []string {
	if x != nil {
		return x.Arguments
	}
	return nil
}

func (x *ApplicationSpec) GetEnvironments() []string {
	if x != nil {
		return x.Environments
	}
	return nil
}

func (x *ApplicationSpec) GetWorkingDirectory() string {
	if x != nil && x.WorkingDirectory != nil {
		return *x.WorkingDirectory
	}
	return ""
}

type Application struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Metadata      *Metadata              `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Spec          *ApplicationSpec       `protobuf:"bytes,2,opt,name=spec,proto3" json:"spec,omitempty"`
	Status        *ApplicationStatus     `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Application) Reset() {
	*x = Application{}
	mi := &file_types_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Application) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Application) ProtoMessage() {}

func (x *Application) ProtoReflect() protoreflect.Message {
	mi := &file_types_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Application.ProtoReflect.Descriptor instead.
func (*Application) Descriptor() ([]byte, []int) {
	return file_types_proto_rawDescGZIP(), []int{9}
}

func (x *Application) GetMetadata() *Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *Application) GetSpec() *ApplicationSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

func (x *Application) GetStatus() *ApplicationStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

type ExecutorSpec struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Slots         int32                  `protobuf:"varint,2,opt,name=slots,proto3" json:"slots,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExecutorSpec) Reset() {
	*x = ExecutorSpec{}
	mi := &file_types_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecutorSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecutorSpec) ProtoMessage() {}

func (x *ExecutorSpec) ProtoReflect() protoreflect.Message {
	mi := &file_types_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecutorSpec.ProtoReflect.Descriptor instead.
func (*ExecutorSpec) Descriptor() ([]byte, []int) {
	return file_types_proto_rawDescGZIP(), []int{10}
}

func (x *ExecutorSpec) GetSlots() int32 {
	if x != nil {
		return x.Slots
	}
	return 0
}

type ExecutorStatus struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	State         ExecutorState          `protobuf:"varint,1,opt,name=state,proto3,enum=flame.ExecutorState" json:"state,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExecutorStatus) Reset() {
	*x = ExecutorStatus{}
	mi := &file_types_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecutorStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecutorStatus) ProtoMessage() {}

func (x *ExecutorStatus) ProtoReflect() protoreflect.Message {
	mi := &file_types_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecutorStatus.ProtoReflect.Descriptor instead.
func (*ExecutorStatus) Descriptor() ([]byte, []int) {
	return file_types_proto_rawDescGZIP(), []int{11}
}

func (x *ExecutorStatus) GetState() ExecutorState {
	if x != nil {
		return x.State
	}
	return ExecutorState_ExecutorIdle
}

type Executor struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Metadata      *Metadata              `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Spec          *ExecutorSpec          `protobuf:"bytes,2,opt,name=spec,proto3" json:"spec,omitempty"`
	Status        *ExecutorStatus        `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Executor) Reset() {
	*x = Executor{}
	mi := &file_types_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Executor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Executor) ProtoMessage() {}

func (x *Executor) ProtoReflect() protoreflect.Message {
	mi := &file_types_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Executor.ProtoReflect.Descriptor instead.
func (*Executor) Descriptor() ([]byte, []int) {
	return file_types_proto_rawDescGZIP(), []int{12}
}

func (x *Executor) GetMetadata() *Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *Executor) GetSpec() *ExecutorSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

func (x *Executor) GetStatus() *ExecutorStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

type SessionList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Sessions      []*Session             `protobuf:"bytes,1,rep,name=sessions,proto3" json:"sessions,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SessionList) Reset() {
	*x = SessionList{}
	mi := &file_types_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SessionList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SessionList) ProtoMessage() {}

func (x *SessionList) ProtoReflect() protoreflect.Message {
	mi := &file_types_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SessionList.ProtoReflect.Descriptor instead.
func (*SessionList) Descriptor() ([]byte, []int) {
	return file_types_proto_rawDescGZIP(), []int{13}
}

func (x *SessionList) GetSessions() []*Session {
	if x != nil {
		return x.Sessions
	}
	return nil
}

type ApplicationList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Applications  []*Application         `protobuf:"bytes,1,rep,name=applications,proto3" json:"applications,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ApplicationList) Reset() {
	*x = ApplicationList{}
	mi := &file_types_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ApplicationList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationList) ProtoMessage() {}

func (x *ApplicationList) ProtoReflect() protoreflect.Message {
	mi := &file_types_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationList.ProtoReflect.Descriptor instead.
func (*ApplicationList) Descriptor() ([]byte, []int) {
	return file_types_proto_rawDescGZIP(), []int{14}
}

func (x *ApplicationList) GetApplications() []*Application {
	if x != nil {
		return x.Applications
	}
	return nil
}

type Result struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ReturnCode    int32                  `protobuf:"varint,1,opt,name=return_code,json=returnCode,proto3" json:"return_code,omitempty"`
	Message       *string                `protobuf:"bytes,2,opt,name=message,proto3,oneof" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Result) Reset() {
	*x = Result{}
	mi := &file_types_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Result) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Result) ProtoMessage() {}

func (x *Result) ProtoReflect() protoreflect.Message {
	mi := &file_types_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Result.ProtoReflect.Descriptor instead.
func (*Result) Descriptor() ([]byte, []int) {
	return file_types_proto_rawDescGZIP(), []int{15}
}

func (x *Result) GetReturnCode() int32 {
	if x != nil {
		return x.ReturnCode
	}
	return 0
}

func (x *Result) GetMessage() string {
	if x != nil && x.Message != nil {
		return *x.Message
	}
	return ""
}

type EmptyRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EmptyRequest) Reset() {
	*x = EmptyRequest{}
	mi := &file_types_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EmptyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmptyRequest) ProtoMessage() {}

func (x *EmptyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_types_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmptyRequest.ProtoReflect.Descriptor instead.
func (*EmptyRequest) Descriptor() ([]byte, []int) {
	return file_types_proto_rawDescGZIP(), []int{16}
}

var File_types_proto protoreflect.FileDescriptor

const file_types_proto_rawDesc = "" +
	"\n" +
	"\vtypes.proto\x12\x05flame\"S\n" +
	"\bMetadata\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x19\n" +
	"\x05owner\x18\x03 \x01(\tH\x00R\x05owner\x88\x01\x01B\b\n" +
	"\x06_owner\"\x87\x02\n" +
	"\rSessionStatus\x12)\n" +
	"\x05state\x18\x01 \x01(\x0e2\x13.flame.SessionStateR\x05state\x12#\n" +
	"\rcreation_time\x18\x02 \x01(\x03R\fcreationTime\x12,\n" +
	"\x0fcompletion_time\x18\x03 \x01(\x03H\x00R\x0ecompletionTime\x88\x01\x01\x12\x18\n" +
	"\apending\x18\x04 \x01(\x05R\apending\x12\x18\n" +
	"\arunning\x18\x05 \x01(\x05R\arunning\x12\x18\n" +
	"\asucceed\x18\x06 \x01(\x05R\asucceed\x12\x16\n" +
	"\x06failed\x18\a \x01(\x05R\x06failedB\x12\n" +
	"\x10_completion_time\"{\n" +
	"\vSessionSpec\x12 \n" +
	"\vapplication\x18\x02 \x01(\tR\vapplication\x12\x14\n" +
	"\x05slots\x18\x03 \x01(\x05R\x05slots\x12$\n" +
	"\vcommon_data\x18\x04 \x01(\fH\x00R\n" +
	"commonData\x88\x01\x01B\x0e\n" +
	"\f_common_data\"\x8c\x01\n" +
	"\aSession\x12+\n" +
	"\bmetadata\x18\x01 \x01(\v2\x0f.flame.MetadataR\bmetadata\x12&\n" +
	"\x04spec\x18\x02 \x01(\v2\x12.flame.SessionSpecR\x04spec\x12,\n" +
	"\x06status\x18\x03 \x01(\v2\x14.flame.SessionStatusR\x06status\"\x9b\x01\n" +
	"\n" +
	"TaskStatus\x12&\n" +
	"\x05state\x18\x01 \x01(\x0e2\x10.flame.TaskStateR\x05state\x12#\n" +
	"\rcreation_time\x18\x02 \x01(\x03R\fcreationTime\x12,\n" +
	"\x0fcompletion_time\x18\x03 \x01(\x03H\x00R\x0ecompletionTime\x88\x01\x01B\x12\n" +
	"\x10_completion_time\"v\n" +
	"\bTaskSpec\x12\x1d\n" +
	"\n" +
	"session_id\x18\x02 \x01(\tR\tsessionId\x12\x19\n" +
	"\x05input\x18\x03 \x01(\fH\x00R\x05input\x88\x01\x01\x12\x1b\n" +
	"\x06output\x18\x04 \x01(\fH\x01R\x06output\x88\x01\x01B\b\n" +
	"\x06_inputB\t\n" +
	"\a_output\"\x83\x01\n" +
	"\x04Task\x12+\n" +
	"\bmetadata\x18\x01 \x01(\v2\x0f.flame.MetadataR\bmetadata\x12#\n" +
	"\x04spec\x18\x02 \x01(\v2\x0f.flame.TaskSpecR\x04spec\x12)\n" +
	"\x06status\x18\x03 \x01(\v2\x11.flame.TaskStatusR\x06status\"g\n" +
	"\x11ApplicationStatus\x12-\n" +
	"\x05state\x18\x01 \x01(\x0e2\x17.flame.ApplicationStateR\x05state\x12#\n" +
	"\rcreation_time\x18\x02 \x01(\x03R\fcreationTime\"\x86\x02\n" +
	"\x0fApplicationSpec\x12\x1f\n" +
	"\x04shim\x18\x01 \x01(\x0e2\v.flame.ShimR\x04shim\x12\x15\n" +
	"\x03url\x18\x02 \x01(\tH\x00R\x03url\x88\x01\x01\x12\x1d\n" +
	"\acommand\x18\x03 \x01(\tH\x01R\acommand\x88\x01\x01\x12\x1c\n" +
	"\targuments\x18\x04 \x03(\tR\targuments\x12\"\n" +
	"\fenvironments\x18\x05 \x03(\tR\fenvironments\x120\n" +
	"\x11working_directory\x18\x06 \x01(\tH\x02R\x10workingDirectory\x88\x01\x01B\x06\n" +
	"\x04_urlB\n" +
	"\n" +
	"\b_commandB\x14\n" +
	"\x12_working_directory\"\x98\x01\n" +
	"\vApplication\x12+\n" +
	"\bmetadata\x18\x01 \x01(\v2\x0f.flame.MetadataR\bmetadata\x12*\n" +
	"\x04spec\x18\x02 \x01(\v2\x16.flame.ApplicationSpecR\x04spec\x120\n" +
	"\x06status\x18\x03 \x01(\v2\x18.flame.ApplicationStatusR\x06status\"$\n" +
	"\fExecutorSpec\x12\x14\n" +
	"\x05slots\x18\x02 \x01(\x05R\x05slots\"<\n" +
	"\x0eExecutorStatus\x12*\n" +
	"\x05state\x18\x01 \x01(\x0e2\x14.flame.ExecutorStateR\x05state\"\x8f\x01\n" +
	"\bExecutor\x12+\n" +
	"\bmetadata\x18\x01 \x01(\v2\x0f.flame.MetadataR\bmetadata\x12'\n" +
	"\x04spec\x18\x02 \x01(\v2\x13.flame.ExecutorSpecR\x04spec\x12-\n" +
	"\x06status\x18\x03 \x01(\v2\x15.flame.ExecutorStatusR\x06status\"9\n" +
	"\vSessionList\x12*\n" +
	"\bsessions\x18\x01 \x03(\v2\x0e.flame.SessionR\bsessions\"I\n" +
	"\x0fApplicationList\x126\n" +
	"\fapplications\x18\x01 \x03(\v2\x12.flame.ApplicationR\fapplications\"T\n" +
	"\x06Result\x12\x1f\n" +
	"\vreturn_code\x18\x01 \x01(\x05R\n" +
	"returnCode\x12\x1d\n" +
	"\amessage\x18\x02 \x01(\tH\x00R\amessage\x88\x01\x01B\n" +
	"\n" +
	"\b_message\"\x0e\n" +
	"\fEmptyRequest*$\n" +
	"\fSessionState\x12\b\n" +
	"\x04Open\x10\x00\x12\n" +
	"\n" +
	"\x06Closed\x10\x01*>\n" +
	"\tTaskState\x12\v\n" +
	"\aPending\x10\x00\x12\v\n" +
	"\aRunning\x10\x01\x12\v\n" +
	"\aSucceed\x10\x02\x12\n" +
	"\n" +
	"\x06Failed\x10\x03*9\n" +
	"\x04Shim\x12\a\n" +
	"\x03Log\x10\x00\x12\t\n" +
	"\x05Stdio\x10\x01\x12\b\n" +
	"\x04Wasm\x10\x02\x12\t\n" +
	"\x05Shell\x10\x03\x12\b\n" +
	"\x04Grpc\x10\x04*-\n" +
	"\x10ApplicationState\x12\v\n" +
	"\aEnabled\x10\x00\x12\f\n" +
	"\bDisabled\x10\x01*^\n" +
	"\rExecutorState\x12\x10\n" +
	"\fExecutorIdle\x10\x00\x12\x11\n" +
	"\rExecutorBound\x10\x01\x12\x13\n" +
	"\x0fExecutorRunning\x10\x02\x12\x13\n" +
	"\x0fExecutorUnknown\x10\x03B&Z$github.com/flame-sh/flame/sdk/go/rpcb\x06proto3"

var (
	file_types_proto_rawDescOnce sync.Once
	file_types_proto_rawDescData []byte
)

func file_types_proto_rawDescGZIP() []byte {
	file_types_proto_rawDescOnce.Do(func() {
		file_types_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_types_proto_rawDesc), len(file_types_proto_rawDesc)))
	})
	return file_types_proto_rawDescData
}

var file_types_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_types_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_types_proto_goTypes = []any{
	(SessionState)(0),         // 0: flame.SessionState
	(TaskState)(0),            // 1: flame.TaskState
	(Shim)(0),                 // 2: flame.Shim
	(ApplicationState)(0),     // 3: flame.ApplicationState
	(ExecutorState)(0),        // 4: flame.ExecutorState
	(*Metadata)(nil),          // 5: flame.Metadata
	(*SessionStatus)(nil),     // 6: flame.SessionStatus
	(*SessionSpec)(nil),       // 7: flame.SessionSpec
	(*Session)(nil),           // 8: flame.Session
	(*TaskStatus)(nil),        // 9: flame.TaskStatus
	(*TaskSpec)(nil),          // 10: flame.TaskSpec
	(*Task)(nil),              // 11: flame.Task
	(*ApplicationStatus)(nil), // 12: flame.ApplicationStatus
	(*ApplicationSpec)(nil),   // 13: flame.ApplicationSpec
	(*Application)(nil),       // 14: flame.Application
	(*ExecutorSpec)(nil),      // 15: flame.ExecutorSpec
	(*ExecutorStatus)(nil),    // 16: flame.ExecutorStatus
	(*Executor)(nil),          // 17: flame.Executor
	(*SessionList)(nil),       // 18: flame.SessionList
	(*ApplicationList)(nil),   // 19: flame.ApplicationList
	(*Result)(nil),            // 20: flame.Result
	(*EmptyRequest)(nil),      // 21: flame.EmptyRequest
}
var file_types_proto_depIdxs = []int32{
	0,  // 0: flame.SessionStatus.state:type_name -> flame.SessionState
	5,  // 1: flame.Session.metadata:type_name -> flame.Metadata
	7,  // 2: flame.Session.spec:type_name -> flame.SessionSpec
	6,  // 3: flame.Session.status:type_name -> flame.SessionStatus
	1,  // 4: flame.TaskStatus.state:type_name -> flame.TaskState
	5,  // 5: flame.Task.metadata:type_name -> flame.Metadata
	10, // 6: flame.Task.spec:type_name -> flame.TaskSpec
	9,  // 7: flame.Task.status:type_name -> flame.TaskStatus
	3,  // 8: flame.ApplicationStatus.state:type_name -> flame.ApplicationState
	2,  // 9: flame.ApplicationSpec.shim:type_name -> flame.Shim
	5,  // 10: flame.Application.metadata:type_name -> flame.Metadata
	13, // 11: flame.Application.spec:type_name -> flame.ApplicationSpec
	12, // 12: flame.Application.status:type_name -> flame.ApplicationStatus
	4,  // 13: flame.ExecutorStatus.state:type_name -> flame.ExecutorState
	5,  // 14: flame.Executor.metadata:type_name -> flame.Metadata
	15, // 15: flame.Executor.spec:type_name -> flame.ExecutorSpec
	16, // 16: flame.Executor.status:type_name -> flame.ExecutorStatus
	8,  // 17: flame.SessionList.sessions:type_name -> flame.Session
	14, // 18: flame.ApplicationList.applications:type_name -> flame.Application
	19, // [19:19] is the sub-list for method output_type
	19, // [19:19] is the sub-list for method input_type
	19, // [19:19] is the sub-list for extension type_name
	19, // [19:19] is the sub-list for extension extendee
	0,  // [0:19] is the sub-list for field type_name
}

func init() { file_types_proto_init() }
func file_types_proto_init() {
	if File_types_proto != nil {
		return
	}
	file_types_proto_msgTypes[0].OneofWrappers = []any{}
	file_types_proto_msgTypes[1].OneofWrappers = []any{}
	file_types_proto_msgTypes[2].OneofWrappers = []any{}
	file_types_proto_msgTypes[4].OneofWrappers = []any{}
	file_types_proto_msgTypes[5].OneofWrappers = []any{}
	file_types_proto_msgTypes[8].OneofWrappers = []any{}
	file_types_proto_msgTypes[15].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_types_proto_rawDesc), len(file_types_proto_rawDesc)),
			NumEnums:      5,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_types_proto_goTypes,
		DependencyIndexes: file_types_proto_depIdxs,
		EnumInfos:         file_types_proto_enumTypes,
		MessageInfos:      file_types_proto_msgTypes,
	}.Build()
	File_types_proto = out.File
	file_types_proto_goTypes = nil
	file_types_proto_depIdxs = nil
}
